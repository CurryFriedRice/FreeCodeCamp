function checkCashRegister(price, cash, cid) {
  var change = new changeDue(cid);
  // Here is your change, ma'am.
  //console.log(change);
  //change.checkChange(cash-price)
  change.change = getChange((cash-price), cid);
  change = getStatus(change.change, cid);
  console.log(change);
  return change;
}

function changeDue(cid) 
{
  this.status = "OPEN";
  this.change = [];
  //this.change = [["QUARTER",0.5]];  
}

function getChange(changeDue, cid)
  {
    let drawerNormalized = [["PENNY", cid[0][1]*100], ["NICKEL",  cid[1][1]*100], 
                            ["DIME",  cid[2][1]*100], ["QUARTER", cid[3][1]*100], 
                            ["ONE", cid[4][1]*100], ["FIVE", cid[5][1]*100], 
                            ["TEN", cid[6][1]*100], ["TWENTY", cid[7][1]*100], 
                            ["ONE HUNDRED", cid[8][1]*100]];
    let cashNormalized = [["PENNY", 1], ["NICKEL", 5], ["DIME", 10], 
                    ["QUARTER", 25], ["ONE", 100], ["FIVE", 500], 
                    ["TEN", 1000], ["TWENTY", 2000], ["ONE HUNDRED", 10000]];
    let changeDueNormalized = changeDue *100;
    let cashBack = [];
    let dummyTotal = 0;
    let calcComplete = false;
    //DEBUG CHECKS
      for(let i = drawerNormalized.length-1; i >=0; i--){
        calcComplete = false;
        while(changeDueNormalized - cashNormalized[i][1] >= 0){
          if(drawerNormalized[i][1] - cashNormalized[i][1] >= 0){
            drawerNormalized[i][1] -= cashNormalized[i][1];
            changeDueNormalized -= cashNormalized[i][1];
            dummyTotal += cashNormalized[i][1];
          }

        if(drawerNormalized[i][1] == 0 || changeDueNormalized < cashNormalized[i][1]){calcComplete = true;}
        if(calcComplete)
          {
            //we don't have enough of this coin Move to the next one...           
            //Add what we have to the amount
            //changeDue += dummyTotal;
            if(dummyTotal != 0)
            {
              cashBack.push([cid[i][0], dummyTotal]);
            }
            dummyTotal = 0;
            break;
          }
          
        }
      }
   if(changeDueNormalized > 0){
      cashBack = new Array();
    }

  for(let i = cashBack.length-1; i >= 0; i--)
  {
    cashBack[i][1] /= 100;
  }
  
  return cashBack; 
  };

function getStatus(change, cid){
  //console.log(change);
  //console.log("Status of change: \n" + change);
  //console.log("Status of drawer: \n" + cid);
  let result = new changeDue();


  if(change.length == 0){
    result.status = "INSUFFICIENT_FUNDS"
    return result;
  }

  let fullChange = [["PENNY", 0], ["NICKEL", 0], ["DIME", 0], 
                    ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], 
                    ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]];
  var matching = true;
  for(var i = 0; i < change.length; i++){
    for(var j = 0; j < cid.length; j++){
        if(change[i][0] == cid[j][0]){
            if(change[i][1] == cid[j][1])
              fullChange[j][1] = change[i][1];
            else{ 
              matching = false;
              break;
            }
        }
    }
  }
  
  if(matching){
    result.status = "CLOSED";
    result.change = fullChange;
    return result;
  }
  console.log(fullChange);

  result.status = "OPEN";
  result.change = change;
  return result; 
}
// Example cash-in-drawer array:
// [["PENNY", 1.01],
// ["NICKEL", 2.05],
// ["DIME", 3.1],
// ["QUARTER", 4.25], 
// ["ONE", 90],
// ["FIVE", 55],
// ["TEN", 20],
// ["TWENTY", 60],
// ["ONE HUNDRED", 100]]

//checkCashRegister(19.50, 100, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]);
//checkCashRegister(3.26, 100, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]])
checkCashRegister(19.5, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]])